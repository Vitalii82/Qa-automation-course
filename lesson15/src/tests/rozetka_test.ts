import { expect } from 'chai';
import { Builder, By, until } from 'selenium-webdriver';

(async function testRozetkaSearch() {
  let driver = await new Builder().forBrowser('chrome').build();

  try {
    console.log("–í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Å–∞–π—Ç Rozetka...");
    await driver.get('https://rozetka.com.ua/');

    // CSS-—Å–µ–ª–µ–∫—Ç–æ—Ä–∏
    const searchInput = By.css('input.search-form__input');
    const searchButton = By.css('button.search-form__submit');
    const productTitle = By.css('span.goods-tile__title');
    const filterCheckbox = By.css('a.catalog-checkbox');
    const nextPageButton = By.css('a.pagination__direction--forward');

    // XPath-—Å–µ–ª–µ–∫—Ç–æ—Ä–∏
    const cartButtonXPath = By.xpath('//button[contains(@class, "buy-button")]');
    const productPriceXPath = By.xpath('//span[contains(@class, "goods-tile__price-value")]');
    const cartCounterXPath = By.xpath('//span[@class="badge badge--green ng-star-inserted"]');
    const categoryXPath = By.xpath('//a[contains(text(), "–°–º–∞—Ä—Ç—Ñ–æ–Ω–∏")]');

    console.log("–í–∏–∫–æ–Ω—É—î–º–æ —Ç–µ—Å—Ç-–∫–µ–π—Å 1: –ü–æ—à—É–∫ —Ç–æ–≤–∞—Ä—É");
    await driver.findElement(searchInput).sendKeys('iPhone 15');
    await driver.findElement(searchButton).click();
    await driver.wait(until.elementLocated(productTitle), 15000);
    const firstProduct = await driver.findElement(productTitle).getText();
    console.log("–ó–Ω–∞–π–¥–µ–Ω–∏–π —Ç–æ–≤–∞—Ä:", firstProduct);
    expect(firstProduct.toLowerCase()).to.include('iphone 15');

    console.log("–í–∏–∫–æ–Ω—É—î–º–æ —Ç–µ—Å—Ç-–∫–µ–π—Å 2: –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –≤ –∫–æ—à–∏–∫");
    await driver.findElement(cartButtonXPath).click();
    await driver.wait(until.elementLocated(cartCounterXPath), 7000);
    const cartCounter = await driver.findElement(cartCounterXPath).getText();
    console.log("–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É:", cartCounter);
    expect(cartCounter).to.equal('1');

    console.log("–í–∏–∫–æ–Ω—É—î–º–æ —Ç–µ—Å—Ç-–∫–µ–π—Å 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ü—ñ–Ω–∏ —Ç–æ–≤–∞—Ä—É");
    const price = await driver.findElement(productPriceXPath).getText();
    console.log('–¶—ñ–Ω–∞ —Ç–æ–≤–∞—Ä—É:', price);
    expect(price).to.not.be.empty;

    console.log("–í–∏–∫–æ–Ω—É—î–º–æ —Ç–µ—Å—Ç-–∫–µ–π—Å 4: –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ç–æ–≤–∞—Ä—ñ–≤");
    await driver.findElement(categoryXPath).click();
    await driver.wait(until.elementLocated(filterCheckbox), 7000);
    await driver.findElement(filterCheckbox).click();
    await driver.wait(until.elementLocated(productTitle), 7000);
    const filteredProduct = await driver.findElement(productTitle).getText();
    console.log("–ó–Ω–∞–π–¥–µ–Ω–∏–π —Ç–æ–≤–∞—Ä –ø—ñ—Å–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó:", filteredProduct);
    expect(filteredProduct).to.not.be.empty;

    console.log("–í–∏–∫–æ–Ω—É—î–º–æ —Ç–µ—Å—Ç-–∫–µ–π—Å 5: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó");
    await driver.findElement(nextPageButton).click();
    await driver.wait(until.elementLocated(productTitle), 7000);
    const nextPageProduct = await driver.findElement(productTitle).getText();
    console.log("–¢–æ–≤–∞—Ä –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ:", nextPageProduct);
    expect(nextPageProduct).to.not.be.empty;

    console.log("‚úÖ –£—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ!");

  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ç–µ—Å—Ç—É:", error);
  } finally {
    await driver.quit();
    console.log("üîö –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –±—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä–∏—Ç–æ.");
  }
})();
