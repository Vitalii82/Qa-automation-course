---------------
Принципи ООП у цій дз/проєкті:
Інкапсуляція: Усі деталі роботи з транспортом (запуск двигуна, рух, зупинка) приховані всередині кожного класу, і ми працюємо з ними через інтерфейс Transport.
Наслідування: Кожен клас транспорту (автомобіль, велосипед, літак) наслідує інтерфейс Transport, забезпечуючи стандартизовану реалізацію для всіх транспортних засобів.
Поліморфізм: Функція operateTransport працює з будь-яким об'єктом, який реалізує інтерфейс Transport, незалежно від конкретного типу транспорту.
Абстракція: Інтерфейс Transport визначає лише загальні методи для роботи з транспортними засобами, приховуючи деталі їх реалізації в кожному класі.
---------------
Принципи SOLID:
S (Single Responsibility Principle): Кожен клас має одну відповідальність — реалізувати певний тип транспорту.
O (Open/Closed Principle): Клас можна розширювати, додаючи нові типи транспорту, не змінюючи існуючий код.
L (Liskov Substitution Principle): Кожен клас, що реалізує інтерфейс Transport, може бути використаний замість іншого класу без порушення роботи програми.
I (Interface Segregation Principle): Інтерфейс Transport містить лише методи, необхідні для роботи з будь-яким транспортним засобом.
D (Dependency Inversion Principle): Функція operateTransport залежить від абстракції (інтерфейсу Transport), а не від конкретних реалізацій класів.